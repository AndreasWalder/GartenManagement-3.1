@page "/"
@using System.Diagnostics;
@using GartenManagement.BAL
@using GartenManagement.Services
@inject IJSRuntime JsRuntime
@inject AccountServices accountServices
@inject NavigationManager NavigationManager

<h1>Login</h1>

<br />

<EditForm Model="@account" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <label><strong class="inputText">Name:</strong></label>
    <InputText @bind-Value="account.Username" />



    <label><strong class="inputText">Passwort:</strong></label>
    <InputText type="password" @bind-Value="account.Password" />


    <br />
    <br />

    <h3>
        <button type="submit">Login</button>
    </h3>

</EditForm>

@code {

    private Account account = new Account();

    System.Collections.Generic.List<Account> userList;

    protected override async Task OnInitializedAsync()
    {
        if (Helper.Login.isLogin == true) { JsRuntime.InvokeVoidAsync("alert", "You logged out!"); Helper.Login.isLogin = false; StateHasChanged(); }
        userList = await Task.Run(() => accountServices.GetAllAsync());
    }

    private void HandleValidSubmit()
    {
        foreach (var item in userList)
        {
            if (item.Username == account.Username && item.Password == account.Password)
            {
                Helper.Login.isLogin = true;
                NavigationManager.NavigateTo("DeliveryPage");
            }
        }

        if (Helper.Login.isLogin == false)
        {
            JsRuntime.InvokeVoidAsync("alert", $"<{account.Username}> not authorized to log in!"); // Alert
        }
    }
}
